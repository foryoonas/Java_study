package Java_2Week;

import java.util.Scanner;

/*문제: N(1<=N<=1000000)개의 정수가 주어졌을 때 주어진 N개의 정수들 중 최솟값과 최댓값을 구하는 프로그램을 작성하세요!(오류를 없애거나 채워넣어야 할 문제 총 4개)
조건: 이때 모든 정수는 -1000000보다 크거나 같고 ,1000000보다 작거나 같은 정수이다.*/

public class MaxorMinvalue_Answer {

	public static void main(String[] args) {
		System.out.println("정수 N을 입력하세요:");
		Scanner sc = new Scanner(System.in);
		int N =sc.nextInt(); //
		
		System.out.println("N개의 정수들을 입력하세요:");
		int [] array = new int[N]; //[문제1] N개의 정수들을 담기위해 배열로 저장하기
		
		int Max = -1000000; //[문제2] Max를 -1000000으로 초기화
		int Min = 1000000;  //[문제3] Min를 1000000으로 초기화
		
		/*"최솟값"을 구하기 위해서는 초기값을 주어진 범위의 최대값인 1000000으로 설정해야합니다.
		   그래야만 주어진 범위의 어떤 정수라도 최솟값과 비교가 가능합니다.
		   즉 최솟값을 주어진 범위 중 가장 큰 수로 초기화해야 다른 정수와 비교했을 때 가장 작은 정수를 찾을 수 있습니다.(1000000보다 더 큰 수는 없으므로 큰 수가 나올 수는 없음)
		   예를들어 최솟값을 -1000000으로 설정하면 -1000000과 비교할 더 낮은 최솟값이 없어집니다.
		
		  "최댓값"을 구하기 위해서는 초기값을 주어진 범위의 최솟값인 -1000000으로 설정해야합니다.
		  그래야만 주어진 범위의 어떤 정수라도 최댓값과 비교가 가능합니다.
		  즉,최댓값을 주어진 범위 중 가장 작은 수로 초기화해야 다른 정수와 비교했을 때 가장 큰 정수를 첮을 수 있습니다.(-1000000보다 더 작은 수는 없으므로 작은 수는 나올 수 없음)
		  예를들어 최댓값을 1000000으로 설정하면 1000000과 비교할 더 높은 최댓값이 없어집니다.
		  입력으로 1000000보다 큰 값이 주어지면 초기값이 1000000으로 설정되어 있을 때 이 값을 최대값으로 갱신할 수 있습니다. 
		
		  즉 주어진 코드에서 Max를 -1000000으로 초기화하고, Min를 1000000으로 초기화하는 이유는 
		  "각각의 입력된 정수가 반복문을 통해 순차적으로 비교되고 최댓값과 최솟값을 갱신하기 위함입니다"
		
		*/
		
		for(int i=0; i<array.length; i++) { 
			
			array[i]=sc.nextInt(); //array[i]에 들어갈 정수 입력
			
			if(array[i]>Max) {   //array에 저장된 정수들끼리 비교해가며 Max값 찾기
				Max=array[i];    //array[i]가 최댓값이 나올 때 까지 for문 반복			
				
			}
		    
			if(array[i]<Min) {   //array에 저장된 정수들끼리 비교해가며 Min값 찾기
	  		    Min=array[i];    //array[i]가 최솟값이 나올 때 까지 for문 반복
	  		    
	  		    /*초기값:Max=-1000000, Min=1000000
	  		     
	  		     array[0]=20;이라 가정하면
	  		     array[0]과 초기값 비교: 20>-1000000이므로 Max는 20
	  		     array[0]과 초기값 비교: 20<1000000이므로 Min는 20
	  		     
	  		     array[1]=10;이라 가정하면 
	  		     array[1]과 이전의 Max=20비교 -> 10<20이므로 Max값은 변화가 없음
	  		     array[1]과 이전의 Max=20을 비교 -> 10<20이므로 Min는 10으로 변화됨
	  		    
	  		     */
		    } 
		
		
	}

             System.out.println(Max+" "+Min); //[문제4] Max와 Min값을 +연산자를 사용하여 공백을 포함해 출력하기 
             /*자바에서 Min+""+Max와 같이 문자열과 다른 값을 +연산자로 이어붙이면 숫자가 문자열로 변환됩니다.
	            만약 Min+Max로 사용했다면 Min값과 Max값이 더해진 값이 출력이 될 것이다.*/
	
	}

}

                                   /* 결과 출력
                                     정수N을 입력하세요:
                                     3
                                     N개의 정수들을 입력하세요:
                                     94
                                     16
                                     27
  
                                     94 16
                                 */
 
